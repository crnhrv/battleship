:root {
  --cell-size: 15px;
  --primary-light: rgba(153, 11, 40, 0.623);
  --primary-dark: rgba(177, 9, 9, 0.486);
  --secondary-light: rgb(118, 141, 243);
  --secondary-dark: rgba(11, 18, 110, 0.815);
}

@media (min-width: 600px) {
  :root {
    --cell-size: 30px;
  }
}

@media (min-width: 1200px) {
  :root {
    --cell-size: 60px;
  }
}

*,
*::after,
*::before {
  margin: 0;
}

body {
  background-color: rgba(0, 0, 0, 0.911);
}

body,
html {
  font-size: 12px;
}

@media (min-width: 600px) {
  body,
  html {
    font-size: 14px;
  }
}

@media (min-width: 1200px) {
  body,
  html {
    font-size: 16px;
  }
}

.pre-grid-wrapper {
  display: grid;
  grid-template-rows: auto 150px;
  grid-template-columns: 37% 20%;
  grid-column-gap: 3em;
  grid-template-areas:
    'grid  ships'
    'start start';
  justify-content: center;
}

.game-grid-wrapper {
  display: flex;
  width: 80%;
  margin: 0 auto;
  justify-content: center;
  gap: 4em;
}

.gameInfo {
  color: var(--primary-dark);
  text-align: center;
  margin-bottom: 3em;
}

.score {
  position: absolute;
  right: 0;
}

.pre-grid,
#pGrid,
#cGrid {
  position: relative;
  display: grid;
  grid-template-columns: repeat(10, var(--cell-size));
  grid-area: grid;
  gap: 5px;
  margin: 0 auto;
  align-self: center;
}

#cGrid .score {
  color: var(--primary-light);
  top: -15%;
  font-size: 1.2rem;
}

@media (min-width: 600px) {
  #cGrid .score {
    top: -10%;
  }
}

@media (min-width: 1200px) {
  #cGrid .score {
    top: -7%;
  }
}

#cGrid {
  margin: 0;
}

#cGrid .cell:hover {
  background-color: var(--primary-light);
  cursor: crosshair;
}

#pGrid {
  grid-template-columns: repeat(10, calc(var(--cell-size) / 2));
  margin: 0;
  align-self: none;
  opacity: 0.6;
}

#pGrid .score {
  color: var(--secondary-light);
  top: -25%;
  font-size: 0.9rem;
}

@media (min-width: 600px) {
  #pGrid .score {
    top: -13%;
    font-size: 1rem;
  }
}

@media (min-width: 1200px) {
  #pGrid .score {
    top: -10%;
  }
}

#pGrid .cell {
  height: calc(var(--cell-size) / 2);
  width: calc(var(--cell-size) / 2);
  border: 1px dotted var(--secondary-dark);
}

#pGrid .cell:hover {
  cursor: not-allowed;
}

.btn {
  display: none;
  place-self: center;
  margin: 0;
  padding: 1.5rem 5rem;
  font: inherit;
  text-transform: uppercase;
  letter-spacing: 3px;
  background-color: var(--primary-dark);
  border: none;
  color: white;
}

.reset {
  align-self: start;
}

.cell {
  background-color: rgb(0, 0, 0);
  border: 1px dotted var(--primary-dark);
  width: var(--cell-size);
  height: var(--cell-size);
}

.mishit {
  background-color: rgba(56, 53, 53, 0.527);
  border: 1px dotted var(--primary-light);
  opacity: 0.2;
}

#pGrid .mishit::after {
  font-size: 0.5rem;
}

.mishit::after {
  content: 'âœ˜';
  display: grid;
  height: 100%;
  font-size: 0.8rem;
  color: rgba(167, 151, 151, 0.418);
  place-items: center;
}

@media (min-width: 600px) {
  #pGrid .mishit::after {
    font-size: 1rem;
  }

  #cGrid .mishit::after {
    font-size: 1.3rem;
  }
}

@media (min-width: 1200px) {
  #pGrid .mishit::after {
    font-size: 1.2rem;
  }

  #cGrid .mishit::after {
    font-size: 2rem;
  }
}

.sunk {
  opacity: 0.2;
}

.hit {
  background-color: var(--primary-dark);
}

#pGrid .mishit,
#pGrid .sunk {
  opacity: 0.6;
}

#pGrid .hit {
  background-color: var(--secondary-dark);
}

#cGrid .hit.cell:hover {
  background-color: var(--primary-dark);
}

#cGrid .mishit.cell:hover {
  background-color: rgba(68, 61, 61, 0.527);
}

.title {
  font-size: 3.5rem;
  color: var(--primary-dark);
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.3em;
  margin-top: 1em;
  margin-bottom: 1em;
}

.ships {
  display: grid;
  justify-content: start;
}

.ship {
  position: relative;
  z-index: 995;
  display: grid;
  column-gap: 3px;
  row-gap: 5px;
  align-content: start;
  justify-content: start;
  grid-auto-flow: column;
}

.part {
  position: relative;
  z-index: 15;

  width: calc(var(--cell-size) / 2);
  height: calc(var(--cell-size) / 2);
  border: 1px solid rgba(128, 128, 128, 0.664);
  background-color: var(--primary-dark);
}

.cell.part {
  width: var(--cell-size);
  height: var(--cell-size);
}

.random {
  display: block;
  grid-column: 1 / -1;
}
